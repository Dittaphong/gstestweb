<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class graduatebyjomodel extends CI_Model {	public function AuthenGraduate($input) {		$this->db->where('USERCODE',$input['userName']);		$this->db->where('USERPASS',$input['password']);		$query = $this->db->get('user_group');		return $query->result_array();	}	public function student_relate(){		$this->db->join('attribute_prefix', 'student_master.PREFIXID = attribute_prefix.PREFIXID','LEFT');		$this->db->join('attribute_faculty', 'student_master.FACULTYID = attribute_faculty.FACULTYID','LEFT');		$this->db->join('attribute_department', 'student_master.DEPARTMENTID = attribute_department.DEPARTMENTID','LEFT');		$this->db->join('program', 'student_master.PROGRAMID = program.PROGRAMID','LEFT');		$this->db->join('campus', 'student_master.CAMPUSID = campus.CAMPUSID','LEFT');		$this->db->join('attribute_level', 'student_master.LEVELID = attribute_level.LEVELID','LEFT');		$this->db->join('attribute_procedure_study', 'student_master.procedure_study_id = attribute_procedure_study.procedure_study_id','LEFT');		$this->db->join('attribute_student_status', 'student_master.STUDENTID = attribute_student_status.STUDENTID', 'LEFT');	}	public function student_studing(){		$this->db->where('student_master.procedure_study_id NOT BETWEEN 8 AND 10' , NULL, FALSE );
		$this->student_relate();		$query = $this->db->get('student_master');		return $query->result_array();	}	public function student_all(){		//$this->student_relate();		$query = $this->db->get('student_master');		return $query->result_array();	}	public function StudentApproveAdviser(){		$this->db->where('student_master.procedure_study_id NOT BETWEEN 8 AND 10' , NULL, FALSE );
		$this->student_relate();		$query = $this->db->get('adviser');		return $query->result_array();	}	public function facultyLists(){		$query = $this->db->get('attribute_faculty');		return $query->result_array();	}	public function departmentLists(){		$query = $this->db->get('attribute_department');		return $query->result_array();	}	public function levelIDLists(){		$query = $this->db->get('attribute_level');		return $query->result_array();	}	public function transcript($stdId){		$this->db->select('ACADYEAR,SEMESTER');		$this->db->group_by('ACADYEAR,SEMESTER');		$query = $this->db->get_where('transcript',array('STUDENTID'=>$stdId));		return $query->result_array();	}	public function transcript2($arr){		$this->db->join('course', 'transcript.COURSEID = course.COURSEID');		$query = $this->db->get_where('transcript',$arr);		return $query->result_array();	}	public function getStudentID($input){		$this->db->where('student_master.STUDENTCODE', $input);		$query = $this->db->get('student_master');		return $query->result_array();	}	public function getSTudentInfo($arr){		$this->db->like($arr);		$query = $this->db->get('student_master_view');		return $query->result_array();	}	public function StudentInfoByStudentCode($input){		$this->db->where('student_master.STUDENTCODE', $input);		$this->student_relate();		$query = $this->db->get('student_master');		return $query->result_array();	}	public function StudentInfoByID($input){		$this->db->where('student_master.STUDENTID', $input);		$this->student_relate();		$query = $this->db->get('student_master');		return $query->result_array();	}	public function studentTranscriptInfo($input){		$this->db->where('transcript.STUDENTID',$input);		$this->db->join('course', 'transcript.COURSEID = course.COURSEID');		$query = $this->db->get('transcript');		return $query->result_array();	}	public function Select($table, $data, $limit, $index){
		$this->db->where($data);		$limit!="*"? $this->db->limit($limit) : "";		$query = $this->db->get($table);		return $query->result_array();	}	public function getLastRow($table, $condition, $id){
		$this->db->select($id);		$this->db->from($table);		$this->db->where($condition);		$this->db->order_by($id,'DESC');		$query = $this->db->get();		return $query->result_array();	}	public function insert($table,$data){		$this->db->insert($table,$data);		$query = $this->db->get();	}	public function update($table, $data, $where){		$this->db->where($where[0], $where[1]);		$this->db->update('mytable', $data);	}	public function graduateOfficerList(){		$this->db->join('attribute_prefix','officer.PREFIXID = attribute_prefix.PREFIXID');		$this->db->join('graduatefficer','graduateofficer.OFFICERID=officer.OFFICERID');		$query = $this->db->get('graduateofficer');		return $query->result_array();	}}