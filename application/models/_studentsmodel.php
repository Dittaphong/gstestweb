<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class studentsmodel extends CI_Model {  public function studentall()  {	$this->db->where( "studentmaster.procedure_study_id NOT BETWEEN 8 AND 10", NULL, FALSE );    $this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');    $this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');    $this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');    $this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');    $this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');		$this->db->limit(100, 200);    $query = $this->db->get('studentmaster');    return $query->result_array();  }  public function StudentInfo($input)  {    $this->db->where('studentmaster.STUDENTID', $input);//    $this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');//    $this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');//    $this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');//    $this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');//    $this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');    $query = $this->db->get('studentmaster');    return $query->result_array();  }  public function StudentByOfficer($input)  {    //Where	$this->db->where('adviser.OFFICERID', $input);    $this->db->where('adviser.ADVISERTYPE = 1');	$this->db->where( "studentmaster.procedure_study_id NOT BETWEEN 8 AND 10", NULL, FALSE );    //Join	$this->db->join('studentmaster', 'adviser.STUDENTID = studentmaster.STUDENTID');		$this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');		$this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');		$this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');		$this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');		$this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');    //Result    $query = $this->db->get('adviser');    return $query->result_array();  }  public function StudentByOfficer2($input)  {    //Where	$this->db->where('adviser.OFFICERID', $input);    $this->db->where('adviser.ADVISERTYPE = 2');	$this->db->where( "studentmaster.procedure_study_id NOT BETWEEN 8 AND 10", NULL, FALSE );    //Join	$this->db->join('studentmaster', 'adviser.STUDENTID = studentmaster.STUDENTID');		$this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');		$this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');		$this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');		$this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');		$this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');    //Result    $query = $this->db->get('adviser');    return $query->result_array();  }  public function ThesisAll()  {    // $this->db->where('OFFICERID', $input);    //Join    $this->db->join('studentmaster', 'thesis.STUDENTID = studentmaster.STUDENTID');    $this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');    $this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');    $this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');    $this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');    $this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');    $query = $this->db->get('thesis');    return $query->result_array();  }  public function ResearchAll()  {    // $this->db->where('OFFICERID', $input);    //Join    $this->db->join('studentmaster', 'research.STUDENTID = studentmaster.STUDENTID');    $this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');    $this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');    $this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');    $this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');    $this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');    $query = $this->db->get('research');    return $query->result_array();  }  	//	'Student' => $this->studentsmodel->StudentInfo($input),	//	'Adviser' => $this->studentsmodel->Adviser($input),	//	'Proposal' => $this->studentsmodel->Proposal($input),	//	'Comprehensive' => $this->studentsmodel->Comprehensive($input),	//	'Qualifying' => $this->studentsmodel->Qualifying($input)),		public function Adviser($input)  	{		$this->db->where('STUDENT_ID', $input);		$query = $this->db->get('appoint_adviser_is_thesis');		return $query->result_array();  	}	public function AdviserList($input)  	{		$this->db->where('adviser.STUDENTID', $input);		$this->db->where('studentmaster.procedure_study_id = 1');		$this->db->join('studentmaster', 'adviser.STUDENTID = studentmaster.STUDENTID');		$this->db->join('officer', 'adviser.OFFICERID = officer.OFFICERID');		$query = $this->db->get('adviser');		return $query->result_array();  	}	//นับ วิทยานิพนธ์ ทั้งหมด	public function AdviserCountAllTheis1($input2)  	{		$this->db->where('adviser.OFFICERID', $input2);		$this->db->where('studentmaster.levelid != 81');		$this->db->where( "studentmaster.procedure_study_id NOT BETWEEN 8 AND 10", NULL, FALSE );		$this->db->join('studentmaster', 'adviser.STUDENTID = studentmaster.STUDENTID');		$query = $this->db->get('adviser');		return $query->num_rows();  	}	//นับ วิทยานิพนธ์ ที่ปรึกษาหลัก	public function AdviserCountTheis1($input2)  	{		$this->db->where('adviser.OFFICERID', $input2);		$this->db->where('adviser.ADVISERTYPE = 1');		$this->db->where('studentmaster.levelid != 81');		$this->db->where( "studentmaster.procedure_study_id NOT BETWEEN 8 AND 10", NULL, FALSE );		$this->db->join('studentmaster', 'adviser.STUDENTID = studentmaster.STUDENTID');		$query = $this->db->get('adviser');		return $query->num_rows();  	}	//นับ วิทยานิพนธ์ ที่ปรึกษาร่วม	public function AdviserCountTheis2($input2)  	{		$this->db->where('adviser.OFFICERID', $input2);		$this->db->where('adviser.ADVISERTYPE = 2');		$this->db->where('studentmaster.levelid != 81');		$this->db->where( "studentmaster.procedure_study_id NOT BETWEEN 8 AND 10", NULL, FALSE );		$this->db->join('studentmaster', 'adviser.STUDENTID = studentmaster.STUDENTID');		$query = $this->db->get('adviser');		return $query->num_rows();  	}	//นับ อิสระ ทั้งหมด	public function AdviserCountAllTheis2($input2)  	{		$this->db->where('adviser.OFFICERID', $input2);		$this->db->where('studentmaster.levelid = 81');		$this->db->where( "studentmaster.procedure_study_id NOT BETWEEN 8 AND 10", NULL, FALSE );		$this->db->join('studentmaster', 'adviser.STUDENTID = studentmaster.STUDENTID');		$query = $this->db->get('adviser');		return $query->num_rows();  	}	//นับ อิสระ หลัก	public function AdviserCountTheis3($input2)  	{		$this->db->where('adviser.OFFICERID', $input2);		$this->db->where('adviser.ADVISERTYPE = 1');		$this->db->where('studentmaster.levelid = 81');		$this->db->where( "studentmaster.procedure_study_id NOT BETWEEN 8 AND 10", NULL, FALSE );		$this->db->join('studentmaster', 'adviser.STUDENTID = studentmaster.STUDENTID');		$query = $this->db->get('adviser');		return $query->num_rows();  	}	//นับ อิสระ ร่วม	public function AdviserCountTheis4($input2)  	{		$this->db->where('adviser.OFFICERID', $input2);		$this->db->where('adviser.ADVISERTYPE = 2');		$this->db->where('studentmaster.levelid = 81');		$this->db->where( "studentmaster.procedure_study_id NOT BETWEEN 8 AND 10", NULL, FALSE );		$this->db->join('studentmaster', 'adviser.STUDENTID = studentmaster.STUDENTID');		$query = $this->db->get('adviser');		return $query->num_rows();  	}	public function Proposal($input)  	{		$this->db->where('STUDENTID', $input);		$query = $this->db->get('proposal_thesis_is');		return $query->result_array();  	}	public function Comprehensive($input)  	{		$this->db->where('STUDENTID', $input);		$query = $this->db->get('comprehensiveexampaper');		return $query->result_array();  	}	public function Qualifying($input)  	{		$this->db->where('STUDENTID', $input);		$query = $this->db->get('qualifyingexampaper');		return $query->result_array();  	}	public function command_no($input)  	{		$this->db->where('ADVISER_ID', $input['ADVISER_ID']);		$this->db->update('adviser',$input);  	}	public function StudentNomalInfo($input)  	{		$this->db->where('STUDENTID', $input);		$this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');		$this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');		$this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');		$this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');		$this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');		$query = $this->db->get('studentmaster');		return $query->result_array();  	}	public function ApprovedAdvisor()  	{		$this->db->join('studentmaster', 'appoint_adviser_is_thesis.STUDENT_ID = studentmaster.STUDENTID');		$this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');		$this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');		$this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');		$this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');		$this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');		$query = $this->db->get('appoint_adviser_is_thesis');		return $query->result_array();  	}	public function ApprovedQECE()  	{		$this->db->join('studentmaster', 'comprehensiveexampaper.STUDENTID = studentmaster.STUDENTID');		$this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');		$this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');		$this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');		$this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');		$this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');		$query = $this->db->get('comprehensiveexampaper');		return $query->result_array();  	}	public function ApprovedPropersal()  	{		$this->db->join('studentmaster', 'exam_proposal_thesis_is.STUDENTID = studentmaster.STUDENTID');		$this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');		$this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');		$this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');		$this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');		$this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');		$query = $this->db->get('proposal_thesis_is');		return $query->result_array();  	}	public function ApprovedThesis()  	{		$this->db->join('studentmaster', 'exam_proposal_thesis_is.STUDENTID = studentmaster.STUDENTID');		$this->db->join('faculty', 'studentmaster.FACULTYID = faculty.FACULTYID');		$this->db->join('department', 'studentmaster.DEPARTMENTID = department.DEPARTMENTID');		$this->db->join('levelid', 'studentmaster.LEVELID = levelid.LEVELID');		$this->db->join('procedure_study', 'studentmaster.procedure_study_id = procedure_study.procedure_study_id');		$this->db->join('studentstatus', 'studentmaster.STUDENTID = studentstatus.STUDENTID');		$query = $this->db->get('exam_thesis_is');		return $query->result_array();  	}}